{"version":3,"file":"static/js/736.915ed499.chunk.js","mappings":"0OAEaA,E,QAAWC,EAAAA,GAAH,gD,SC8BrB,EA3Ba,WACT,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAQM,EAAIP,WACtD,CAACE,KAGA,8BACKF,IACG,SAACH,EAAD,UACKG,EAAKQ,KAAI,SAAAC,GAAI,OACV,0BACKA,EAAKC,cACA,gBAAKC,IAAG,yCAAoCF,EAAKC,cAAgBE,IAAI,WACrE,0CACN,uBAAIH,EAAKI,QACT,uCAAeJ,EAAKK,eALfL,EAAKM,kB,mNChBtCC,IAAAA,SAAAA,QAAyB,gCAEzB,IAEMC,EAAS,CACXC,QAHY,mCAIZC,SAAU,SAGDC,EAAc,mCAAG,WAAOC,EAAaC,GAApB,uFACHN,GAAAA,CAAM,gBAAiB,CAC1CC,QAAO,kBACAA,GADD,IAEFM,MAAOF,EACPC,KAAAA,MALkB,cACpBE,EADoB,yBAQnBA,EAASC,MARU,2CAAH,wDAWdC,EAAiB,mCAAG,oGACNV,GAAAA,CAAM,mBAAoB,CAC7CC,OAAAA,IAFyB,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOjBE,EAAmB,mCAAG,WAAOC,GAAP,uFACRZ,GAAAA,CAAM,SAAD,OAAUY,GAAY,CAC9CX,OAAAA,IAF2B,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBpB,EAAmB,mCAAG,WAAOuB,GAAP,uFACRZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA8B,CACtDX,OAAAA,IAF2B,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBI,EAAsB,mCAAG,WAAOD,GAAP,uFACXZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA8B,CACtDX,OAAAA,IAF8B,cAC5BO,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/apiGetMovies/apiGetMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n    padding-top: 20px;\n`","import { apiGetMovieCastById } from \"services/apiGetMovies/apiGetMovies\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CastList } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        apiGetMovieCastById(movieId).then(res => setCast(res.cast));\n    }, [movieId])\n\n    return (\n        <>\n            {cast && \n                <CastList>\n                    {cast.map(item =>\n                        <li key={item.cast_id}>\n                            {item.profile_path\n                                ? <img src={`https://image.tmdb.org/t/p/w200${item.profile_path}`} alt=\"Actor\" />\n                                : <p>No picture :(</p>}\n                            <p>{item.name}</p>\n                            <p>Character: {item.character}</p>\n                        </li>)}    \n                </CastList>\n            }\n        </>\n        )\n}\n\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1691901ed2ae3d246dfa1eabb74d344d';\n\nconst params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nexport const apiMovieSearch = async (searchQuery, page) => {\n    const response = await axios(`search/movie/`, {\n        params: {\n            ...params,\n            query: searchQuery,\n            page, \n        }\n    });\n    return response.data;\n}\n\nexport const apiTrandingMovies = async () => {\n    const response = await axios(`trending/all/day`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieInfoById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieCastById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieReviewsById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params,\n    });\n    return response.data;\n}"],"names":["CastList","styled","useState","cast","setCast","movieId","useParams","useEffect","apiGetMovieCastById","then","res","map","item","profile_path","src","alt","name","character","cast_id","axios","params","api_key","language","apiMovieSearch","searchQuery","page","query","response","data","apiTrandingMovies","apiGetMovieInfoById","movie_id","apiGetMovieReviewsById"],"sourceRoot":""}