{"version":3,"file":"static/js/738.799b3e3f.chunk.js","mappings":"sLAEaA,E,QAAaC,EAAAA,OAAH,yK,SCAVC,EAAe,WAExB,OAAO,SAACF,EAAD,CAAYG,KAAK,SAAjB,uB,gHCFEC,EAAeH,EAAAA,EAAAA,OAAH,6IAOZI,EAAaJ,EAAAA,EAAAA,KAAH,mD,SCNVK,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAaMC,EAAkB,WACpBD,EAAc,KAGlB,OACI,UAACL,EAAD,CAAYE,SAhBS,SAACK,GACtBA,EAAEC,iBACFN,EAASE,GACTE,KAaA,WACI,kBACIG,SAZc,SAACF,GACvB,IAAQG,EAAUH,EAAEI,cAAZD,MACRL,EAAcK,IAWNE,KAAK,YACLC,UAAU,QACVf,KAAK,OACLgB,YAAY,2BACZJ,MAAON,KAEX,SAACL,EAAD,CAAcD,KAAK,SAAnB,wB,SC7BCiB,EAAiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAE7B,OACI,8BACEA,EAAWC,OAAS,IAClB,wBACKD,EAAWE,KAAI,SAAAC,GAAK,aACjB,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAnB,mBACKF,EAAMG,aADX,QACoBH,EAAMI,kBAFrBJ,EAAME,Y,oBCmFnC,EApFe,WAAO,IAAD,EAGjB,GAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAI3C,GAA4BzB,EAAAA,EAAAA,UAAS,IAArC,eAAO0B,EAAP,KAAeC,EAAf,KAmEA,OA3DAC,EAAAA,EAAAA,YAAU,WACI,KAAVJ,IACAK,EAAAA,EAAAA,IAAeL,EAAO,GAAGM,MAAK,SAAAC,GAAG,OAAIJ,EAAUI,EAAIC,cACpD,CAACR,KAyDA,iCACI,SAAC,KAAD,CAAMP,GAAG,IAAT,UAAa,SAACvB,EAAA,EAAD,OACb,SAACI,EAAD,CAAWC,SAnEG,SAACkC,GACnBV,EAAgB,CAACC,MAAOS,QAmEpB,SAACrB,EAAD,CAAgBC,WAAYa,S,mNCrFxCQ,IAAAA,SAAAA,QAAyB,gCAEzB,IAEMC,EAAS,CACXC,QAHY,mCAIZC,SAAU,SAGDR,EAAc,mCAAG,WAAOS,EAAaC,GAApB,uFACHL,GAAAA,CAAM,gBAAiB,CAC1CC,QAAO,kBACAA,GADD,IAEFX,MAAOc,EACPC,KAAAA,MALkB,cACpBC,EADoB,yBAQnBA,EAASC,MARU,2CAAH,wDAWdC,EAAiB,mCAAG,oGACNR,GAAAA,CAAM,mBAAoB,CAC7CC,OAAAA,IAFyB,cACvBK,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOjBE,EAAmB,mCAAG,WAAOC,GAAP,uFACRV,GAAAA,CAAM,SAAD,OAAUU,GAAY,CAC9CT,OAAAA,IAF2B,cACzBK,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAOD,GAAP,uFACRV,GAAAA,CAAM,SAAD,OAAUU,EAAV,YAA8B,CACtDT,OAAAA,IAF2B,cACzBK,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBK,EAAsB,mCAAG,WAAOF,GAAP,uFACXV,GAAAA,CAAM,SAAD,OAAUU,EAAV,YAA8B,CACtDT,OAAAA,IAF8B,cAC5BK,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH","sources":["components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/SearchedMovies/SearchedMovies.jsx","pages/Movies/Movies.jsx","services/apiGetMovies/apiGetMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BackButton = styled.button`\n    margin-bottom: 20px;\n\n    :hover, :focus {\n        background-color: orange;\n        color: white;\n        border-color: white;\n    }\n`\n","import { BackButton } from \"./GoBackButton.styled\"\n\nexport const GoBackButton = () => {\n    \n    return <BackButton type=\"button\">Go back</BackButton>\n}","import styled from \"@emotion/styled\";\n\nexport const SearchButton = styled.button`\n    :hover, :focus {\n        background-color: orange;\n        color: white;\n        border-color: white;\n    }\n`\nexport const SearchForm = styled.form`\n    padding-bottom: 20px;\n`\n","import { useState } from \"react\";\nimport { SearchButton, SearchForm } from \"./SearchBar.styled\";\n\nexport const Searchbar = ({ onSubmit }) => {    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleFormSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(inputValue);\n        handleFormReset();\n    }\n    \n    const handleInputChange = (e) => {\n        const { value } = e.currentTarget;\n        setInputValue(value);\n    }\n\n    const handleFormReset = () => {\n        setInputValue('');\n    }\n  \n    return (\n        <SearchForm onSubmit={handleFormSubmit}>  \n            <input\n                onChange={handleInputChange}\n                name=\"inputText\"\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"Search images and photos\"\n                value={inputValue}\n            />\n            <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n    )\n    \n}","import { Link } from \"react-router-dom\";\n\nexport const SearchedMovies = ({ moviesList }) => {\n\n    return (\n        <>\n        { moviesList.length > 0 && (\n            <ul>   \n                {moviesList.map(movie => (\n                    <li key={movie.id}>\n                        <Link to={`${movie.id}` }>\n                            {movie.title ?? movie.original_title}\n                        </Link>\n                    </li>\n                ))}\n            </ul>       \n        )}\n        </>\n    )  \n}\n","import { Searchbar } from \"components/SearchBar/SearchBar\";\nimport { useState, useEffect } from \"react\";\nimport { SearchedMovies } from \"components/SearchedMovies/SearchedMovies\";\nimport { apiMovieSearch } from \"services/apiGetMovies/apiGetMovies\";\nimport { GoBackButton } from \"components/GoBackButton/GoBackButton\";\nimport { Link, useSearchParams } from \"react-router-dom\";\n\n\nconst Movies = () => {\n    \n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n\n\n    const [movies, setMovies] = useState([]);\n\n\n    const handleGetData = (searchValue) => {\n        setSearchParams({query: searchValue})\n    }\n\n\n    useEffect(() => {\n        query !== \"\" &&\n        apiMovieSearch(query, 1).then(res => setMovies(res.results));\n    }, [query]);\n\n\n\n\n\n\n\n\n\n  \n    // const [movies, setMovies] = useState([]);\n    \n    // const [searchQuery, setSearchQuery] = useState('');\n\n\n    // const handleGetData = (searchValue) => {\n    //     setSearchQuery(searchValue);\n    //     setSearchParams(`query=${searchValue}`);\n    // }\n\n \n\n    // console.log(query)\n\n    // useEffect(() => {\n    //     searchQuery !== \"\" &&\n    //     apiMovieSearch(searchQuery, 1).then(res => setMovies(res.results));\n    // }, [searchQuery]);\n\n\n\n\n\n\n\n\n\n\n\n    \n    // const [movies, setMovies] = useState([]);\n    \n    // const [searchQuery, setSearchQuery] = useState('');\n\n\n    // const handleGetData = (searchValue) => {\n    //     setSearchQuery(searchValue);\n    // }\n\n\n    // useEffect(() => {\n    //     searchQuery !== \"\" &&\n    //     apiMovieSearch(searchQuery, 1).then(res => setMovies(res.results));\n    // }, [searchQuery]);\n\n    return (\n        <>\n            <Link to='/'><GoBackButton/></Link>\n            <Searchbar onSubmit={handleGetData} />\n            <SearchedMovies moviesList={movies} />\n        </>\n    );\n};\n\nexport default Movies;\n\n\n\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1691901ed2ae3d246dfa1eabb74d344d';\n\nconst params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nexport const apiMovieSearch = async (searchQuery, page) => {\n    const response = await axios(`search/movie/`, {\n        params: {\n            ...params,\n            query: searchQuery,\n            page, \n        }\n    });\n    return response.data;\n}\n\nexport const apiTrandingMovies = async () => {\n    const response = await axios(`trending/all/day`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieInfoById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieCastById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieReviewsById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params,\n    });\n    return response.data;\n}"],"names":["BackButton","styled","GoBackButton","type","SearchButton","SearchForm","Searchbar","onSubmit","useState","inputValue","setInputValue","handleFormReset","e","preventDefault","onChange","value","currentTarget","name","className","placeholder","SearchedMovies","moviesList","length","map","movie","to","id","title","original_title","useSearchParams","searchParams","setSearchParams","query","get","movies","setMovies","useEffect","apiMovieSearch","then","res","results","searchValue","axios","params","api_key","language","searchQuery","page","response","data","apiTrandingMovies","apiGetMovieInfoById","movie_id","apiGetMovieCastById","apiGetMovieReviewsById"],"sourceRoot":""}