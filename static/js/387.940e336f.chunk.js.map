{"version":3,"file":"static/js/387.940e336f.chunk.js","mappings":"0OAEaA,E,QAAcC,EAAAA,GAAH,kD,SC4BxB,EAzBgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAuBH,GAASI,MAAK,SAAAC,GAAG,OAAIN,EAAWM,EAAIC,cAC5D,CAACN,KAGA,8BACKF,EAAQS,OAAS,GACZ,SAACZ,EAAD,UACGG,EAAQU,KAAI,SAAAC,GAAM,OACf,2BACI,wBAAG,oCAAYA,EAAOC,aACtB,uBAAID,EAAOE,YAFNF,EAAOG,UAMtB,qD,mNCtBlBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAEMC,EAAS,CACXC,QAHY,mCAIZC,SAAU,SAGDC,EAAc,mCAAG,WAAOC,EAAaC,GAApB,uFACHN,GAAAA,CAAM,gBAAiB,CAC1CC,QAAO,kBACAA,GADD,IAEFM,MAAOF,EACPC,KAAAA,MALkB,cACpBE,EADoB,yBAQnBA,EAASC,MARU,2CAAH,wDAWdC,EAAiB,mCAAG,oGACNV,GAAAA,CAAM,mBAAoB,CAC7CC,OAAAA,IAFyB,cACvBO,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOjBE,EAAmB,mCAAG,WAAOC,GAAP,uFACRZ,GAAAA,CAAM,SAAD,OAAUY,GAAY,CAC9CX,OAAAA,IAF2B,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBI,EAAmB,mCAAG,WAAOD,GAAP,uFACRZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA8B,CACtDX,OAAAA,IAF2B,cACzBO,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOnBnB,EAAsB,mCAAG,WAAOsB,GAAP,uFACXZ,GAAAA,CAAM,SAAD,OAAUY,EAAV,YAA8B,CACtDX,OAAAA,IAF8B,cAC5BO,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/apiGetMovies/apiGetMovies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\n    padding-top: 20px;\n\n`","import { apiGetMovieReviewsById } from \"services/apiGetMovies/apiGetMovies\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ReviewsList } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        apiGetMovieReviewsById(movieId).then(res => setReviews(res.results));\n    }, [movieId])\n\n    return (\n        <>\n            {reviews.length > 0 \n                ? <ReviewsList>\n                    {reviews.map(review =>\n                        <li key={review.id}>\n                            <p><b>Author: {review.author}</b></p>\n                            <p>{review.content}</p>\n                        </li>\n                    )}\n                </ReviewsList>           \n                : <p>We don't have reviews</p>\n            }            \n        </>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '1691901ed2ae3d246dfa1eabb74d344d';\n\nconst params = {\n    api_key: API_KEY,\n    language: 'en-US',\n}\n\nexport const apiMovieSearch = async (searchQuery, page) => {\n    const response = await axios(`search/movie/`, {\n        params: {\n            ...params,\n            query: searchQuery,\n            page, \n        }\n    });\n    return response.data;\n}\n\nexport const apiTrandingMovies = async () => {\n    const response = await axios(`trending/all/day`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieInfoById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieCastById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/credits`, {\n        params,\n    });\n    return response.data;\n}\n\nexport const apiGetMovieReviewsById = async (movie_id) => {\n    const response = await axios(`movie/${movie_id}/reviews`, {\n        params,\n    });\n    return response.data;\n}"],"names":["ReviewsList","styled","useState","reviews","setReviews","movieId","useParams","useEffect","apiGetMovieReviewsById","then","res","results","length","map","review","author","content","id","axios","params","api_key","language","apiMovieSearch","searchQuery","page","query","response","data","apiTrandingMovies","apiGetMovieInfoById","movie_id","apiGetMovieCastById"],"sourceRoot":""}